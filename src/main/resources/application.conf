kafka.s3-stream-factory.consumer {
    bootstrap-servers = ${?S3_STREAM_FACTORY_BOOTSTRAP_SERVERS}
    group-id = ${?S3_STREAM_FACTORY_TOPIC_GROUP_ID}
    input-topic = ${?S3_STREAM_FACTORY_EVENTS_TOPIC}
    auto-offset-reset-config = ${?S3_STREAM_FACTORY_KAFKA_AUTO_OFFSET_RESET_CONFIG}
}


# Properties for akka.kafka.ConsumerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = "WARNING"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  kafka {
    committer {

      # Maximum number of messages in a single commit batch
      max-batch = 1000

      # Maximum interval between commits
      max-interval = 1s

      # Parallelsim for async committing
      parallelism = 1
    }

    consumer {
      # Tuning property of scheduled polls.
      # Controls the interval from one scheduled poll to the next.
      poll-interval = 50ms

      # Tuning property of the `KafkaConsumer.poll` parameter.
      # Note that non-zero value means that the thread that
      # is executing the stage will be blocked. See also the `wakup-timeout` setting below.
      poll-timeout = 500ms

      # The stage will delay stopping the internal actor to allow processing of
      # messages already in the stream (required for successful committing).
      # Prefer use of `DrainingControl` over a large stop-timeout.
      stop-timeout = 30s

      # Duration to wait for `KafkaConsumer.close` to finish.
      close-timeout = 20s

      # If offset commit requests are not completed within this timeout
      # the returned Future is completed `CommitTimeoutException`.
      commit-timeout = 15s

      # If commits take longer than this time a warning is logged
      commit-time-warning = 2s

      # Not used anymore (since 1.0-RC1)
      # wakeup-timeout = 3s

      # Not used anymore (since 1.0-RC1)
      # max-wakeups = 10

      # If set to a finite duration, the consumer will re-send the last committed offsets periodically
      # for all assigned partitions. See https://issues.apache.org/jira/browse/KAFKA-4682.
      commit-refresh-interval = infinite

      # Not used anymore (since 1.0-RC1)
      # wakeup-debug = true

      # Fully qualified config path which holds the dispatcher configuration
      # to be used by the KafkaConsumerActor. Some blocking may occur.
      use-dispatcher = "akka.kafka.default-dispatcher"

      # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
      # can be defined in this configuration section.
      kafka-clients {
        # Enable auto-commit by default
        enable.auto.commit = false
      }

      # Time to wait for pending requests when a partition is closed
      wait-close-partition = 500ms

      # Limits the query to Kafka for a topic's position
      position-timeout = 5s

      # When using `AssignmentOffsetsForTimes` subscriptions: timeout for the
      # call to Kafka's API
      offset-for-times-timeout = 5s

      # Timeout for akka.kafka.Metadata requests
      # This value is used instead of Kafka's default from `default.api.timeout.ms`
      # which is 1 minute.
      metadata-request-timeout = 5s
    }
  }

}



alpakka.s3 {
  # whether the buffer request chunks (up to 5MB each) to "memory" or "disk"
  buffer = "memory"

  # location for temporary files, if buffer is set to "disk". If empty, uses the standard java temp path.
  disk-buffer-path = ""

  # DEPRECATED since Alpakka 1.0.1
  # Please use alpakka.s3.endpoint-url for setting custom scheme, host and port.
  proxy {
    # hostname of the proxy. If undefined ("") proxy is not enabled.
    host = ""
    port = 8000

    # if "secure" is set to "true" then HTTPS will be used for all requests to S3, otherwise HTTP will be used
    secure = true
  }

  # An address of a proxy that will be used for all connections using HTTP CONNECT tunnel.
  # forward-proxy {
  #   host = "proxy"
  #   port = 8080
  #   credentials {
  #     username = "username"
  #     password = "password"
  #   }
  # }

  # default values for AWS configuration
  aws {
    # If this section is absent, the fallback behavior is
    # to use the same configuration as if credentials.provider = default
    credentials {
      # anonymous requests (no auth)
      #
      # provider = anon

      # static credentials
      #
      # provider = static
      # access-key-id = ${AWS_ACCESS_KEY}
      # secret-access-key = ${AWS_SECRET_KEY}
      # token = "" # optional

      # default: as described in com.amazonaws.auth.DefaultAWSCredentialsProviderChain docs,
      # attempts to get the credentials from either:
      #   - environment variables
      #   - system properties
      #   - credentials file
      #   - EC2 credentials service
      #   - IAM / metadata
      provider = default

      # provider = EC2 credentials service
    }

    # If this section is absent, the fallback behavior is
    # to use the same configuration as if region.provider = default
    region {
      # static credentials
      #
      provider = static
      default-region = "eu-central-1"
      default-region = ${?AWS_REGION}

      # default: as described in com.amazonaws.regions.AwsRegionProvider.DefaultAwsRegionProviderChain docs,
      # attempts to get the region from either:
      #   - environment variables
      #   - system properties
      #   - progile file
      #   - EC2 metadata
      # provider = default
    }
  }

  # Enable path style access to s3, i.e. "https://s3-eu-central-1.amazonaws.com/my.bucket/myobject"
  # Set to false to enable virtual-hosted style.
  # When using virtual hostedâ€“style buckets with SSL, the S3 wild card certificate only matches buckets that do not contain periods.
  # Buckets containing periods will lead to certificate errors. In those cases it's useful to enable path-style access.
  path-style-access = true

  # Custom endpoint url, used for alternate s3 implementations
  endpoint-url = "https://s3-eu-central-1.amazonaws.com"
  endpoint-url = ${?S3_ENDPOINT_URL}

  # Which version of the list bucket api to use. Set to 1 to use the old style version 1 API.
  # By default the newer version 2 api is used.
  list-bucket-api-version = 2
}

